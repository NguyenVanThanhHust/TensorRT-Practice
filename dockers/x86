FROM nvcr.io/nvidia/deepstream:6.4-gc-triton-devel

ARG DEBIAN_FRONTEND=noninteractive

# Install some basic utilities
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    sudo \
    git \
    bzip2 \
    libx11-6 \
    checkinstall \
    locales \
    lsb-release \
    mesa-utils \
    subversion \
    nano \
    terminator \
    xterm \
    wget \
    htop \
    libssl-dev \
    build-essential \
    dbus-x11 \
    software-properties-common \
    gdb valgrind \
    libeigen3-dev \
    libboost-all-dev \
    && rm -rf /var/lib/apt/lists/*

RUN apt install build-essential software-properties-common -y

# RUN apt-get update && apt install -y python3-gi python3-dev python3-gst-1.0 python-gi-dev git meson \
#     python3 python3-pip python3.10-dev cmake g++ build-essential libglib2.0-dev \
#     libglib2.0-dev-bin libgstreamer1.0-dev libtool m4 autoconf automake libgirepository1.0-dev libcairo2-dev

# RUN apt-get update && apt install -y libgstreamer-plugins-base1.0-dev

# WORKDIR /opt/nvidia/deepstream/deepstream/sources/
# RUN git clone https://github.com/NVIDIA-AI-IOT/deepstream_python_apps.git --recursive --shallow-submodules
# WORKDIR /opt/nvidia/deepstream/deepstream/sources/deepstream_python_apps/
# # RUN git submodule update --init
# RUN apt-get install -y apt-transport-https ca-certificates -y
# RUN update-ca-certificates
# RUN cd 3rdparty/gstreamer/subprojects/gst-python/ && \
#     meson build && \
#     meson configure && \
#     cd build && \
#     ninja && \
#     ninja install

# WORKDIR /opt/nvidia/deepstream/deepstream/sources/deepstream_python_apps/bindings/build/
# RUN cmake .. && make -j$(nproc)
# RUN pip3 install ./pyds-1.1.10-py3-none*.whl

# COPY lib/TensorRT-8.6.1.6.Linux.x86_64-gnu.cuda-12.0.tar.gz /opt/
# WORKDIR /opt
# RUN tar -xvf TensorRT-8.6.1.6.Linux.x86_64-gnu.cuda-12.0.tar.gz
# RUN apt-get update
# ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/TensorRT-8.6.1.6/lib/
# WORKDIR /opt/TensorRT-8.6.1.6/python
# RUN python3 -m pip install tensorrt-8.6.1-cp310-none-linux_x86_64.whl
RUN apt install -y vim


WORKDIR /workspace/